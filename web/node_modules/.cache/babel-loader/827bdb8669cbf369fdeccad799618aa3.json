{"ast":null,"code":"var _jsxFileName = \"/Users/gr4yf1r3/testSites/tts-website/src/components/AudioList.js\";\n// src/components/AudioList.js\nimport React from 'react';\nimport { parseXlsx } from '../utils'; // Import parseXlsx from utils.js\n\nconst AudioList = ({\n  audioFiles,\n  onDownload\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Playlist\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"File Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Length\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Prompt Text\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, audioFiles.map((file, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, file.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, '0:00'), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, file.prompt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => playAudio(file),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onDownload(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Download\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: `checkbox-${index}`,\n    onChange: e => file.checked = e.target.checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })))))));\n};\nconst playAudio = file => {\n  const audio = new Audio(URL.createObjectURL(file.url));\n  audio.play();\n};\nexport default AudioList;","map":{"version":3,"names":["React","parseXlsx","AudioList","audioFiles","onDownload","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","key","name","prompt","onClick","playAudio","type","id","onChange","e","checked","target","audio","Audio","URL","createObjectURL","url","play"],"sources":["/Users/gr4yf1r3/testSites/tts-website/src/components/AudioList.js"],"sourcesContent":["// src/components/AudioList.js\nimport React from 'react';\nimport { parseXlsx } from '../utils';  // Import parseXlsx from utils.js\n\nconst AudioList = ({ audioFiles, onDownload }) => {\n  return (\n    <div>\n      <h2>Playlist</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>Length</th>\n            <th>Prompt Text</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {audioFiles.map((file, index) => (\n            <tr key={index}>\n              <td>{file.name}</td>\n              <td>{'0:00'}</td>\n              <td>{file.prompt}</td>\n              <td>\n                <button onClick={() => playAudio(file)}>Play</button>\n                <button onClick={() => onDownload(index)}>Download</button>\n                <input type=\"checkbox\" id={`checkbox-${index}`} onChange={(e) => file.checked = e.target.checked} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst playAudio = (file) => {\n  const audio = new Audio(URL.createObjectURL(file.url));\n  audio.play();\n};\n\nexport default AudioList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}